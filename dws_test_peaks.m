%DWS test new split peaks
clear all;
close all;
trace_string = "{241.417967;243.070544;245.683779;248.564433;250.470911;252.562388;252.526926;253.049137;255.874721;256.557250;256.885995;256.521470;255.630735;256.190267;254.088174;252.533702;251.570886;250.640350;248.630680;247.392882;246.572628;244.873816;243.038470;242.351002;241.376047;239.894012;240.594733;240.722976;239.935496;239.339549;237.957793;239.376327;241.359792;244.635802;245.886051;248.791503;250.961021;250.871614;251.658999;253.201968;254.236806;255.318609;256.163482;256.394785;255.368153;255.017646;255.100906;254.459863;252.403241;249.364663;248.409261;247.217080;245.809378;245.060932;243.676512;243.169554;241.480101;240.223406;240.835880;240.560807;239.067158;238.655329;238.243198;238.709013;240.250792;242.483630;244.934517;247.129754;249.234139;250.823713;252.945811;254.459572;255.611574;255.401661;255.963580;255.656423;254.968557;255.582183;252.978313;253.999628;252.065541;249.618250;248.354808;247.032197;246.364613;244.314438;243.335715;242.617149;241.990398;240.069581;239.576078;239.280038;239.949650;239.228228;238.799023;239.247054;239.110558;240.256009;243.387102;245.406458;247.481571;249.309348;249.828319;251.328293;253.280000;253.897454;256.066488;255.564696;255.234798;254.278962;254.869109;255.749307;254.727365;251.281493;249.114498;249.524913;247.635952;244.817121;244.834779;242.633845;242.147416;241.439354;240.889529;240.066521;238.787406;238.127928;235.995254;236.342730;238.246144;240.638846;243.306997;246.017290;247.532735;248.889783;250.329503;250.840690;252.662426;252.443763;253.575371;254.117132;254.157505;254.731953;254.793694;254.662455;252.902711;252.507609;251.079601;249.736618;247.484411;246.310822;243.671811;243.714333;242.942740;241.720367;241.612705;239.684667;237.297470;236.403584;237.155689;238.134004;238.847915;240.091485;242.106440;243.770607;246.608542;248.649846;250.659497;254.160166;255.449235;254.989316;255.118049;255.154333;256.619103;256.368547;254.183445;252.693692;252.108506;250.647646;249.627929;249.565936;248.131412;246.423815;244.593067;242.427581;242.232261;241.832317;240.509287;239.689906;239.060289;238.384086;237.129114;237.669395;239.652169;240.519845;242.736424;244.742663;248.511949;250.985824;251.762430;251.509363;251.814815;252.306350;252.217436;253.564719;254.619785;254.145810;254.568114;253.840005;252.763471;252.079646;249.317100;248.344471;246.801691;245.010773;244.041746;242.831595;241.178376;240.185864;238.848931;238.305601;236.122214;236.317879;238.537459;238.266165;237.561124;238.064788;241.005733;243.124887;246.540694;249.170751;250.972415;252.144280;252.043131;253.312305;254.662188;255.073465;254.138545;253.795259;253.417711;254.212210;252.905780;251.096512;249.353765;248.236834;247.085585;246.345680;244.691954;243.287558;241.771649;240.098686;238.453776;237.598417;237.155459;236.712810;236.241073;236.816376;238.484896;239.485248;240.474642;241.920082;243.995127;248.242837;251.631249;253.446427;254.746188;254.788214;253.474631;253.906164;253.087452;252.129681;252.026063;252.813130;251.232251;250.602993;248.714187;248.072841;247.264048;245.903771;243.443616;241.592161;241.662182;241.310342;240.211821;239.412126;239.242707;237.132701;235.622093;237.010930;239.194156;241.576311;242.358459;244.037764;245.379132;247.817027;250.970993;252.862520;254.122234;254.527400;254.368927;253.367636;252.828693;252.228485;252.529076;252.168289;251.978882;251.094973;249.956515;247.767691;246.397819;244.374841;242.364582;241.103843;241.592995;240.855548;238.836327;237.581713;236.839751;235.295639;234.231163;235.495371;236.418726;235.893118;237.351739;240.294868;245.432886;248.544965;249.681199;250.384405;250.982115;251.683229;}";

%trace_string = "{110.586881;104.668904;98.393654;93.989543;91.012862;89.053730;87.547043;86.550515;86.192712;85.793507;85.299817;84.889296;85.069742;89.025818;99.611049;111.126233;120.054581;126.001184;129.879470;132.300974;132.753354;131.085587;126.835792;120.328447;112.667762;105.327033;99.157103;94.525624;91.213029;89.248107;87.869475;86.960177;86.252115;85.855656;85.565221;85.012668;84.631956;86.139774;93.595543;105.723428;116.120172;123.467817;128.322258;131.474871;132.879458;132.146727;129.035729;123.378059;116.207034;108.534850;101.664066;96.510026;92.555852;90.168272;88.280893;87.223224;86.335184;86.029199;85.639162;85.326422;84.861181;84.556399;85.252997;90.627800;102.113470;113.235206;121.452822;126.761987;130.650311;132.182198;132.474244;130.392127;125.736805;118.829927;111.040004;103.846343;98.077662;93.732051;90.795684;88.995653;88.128046;86.902290;86.214993;85.565084;85.336347;84.867119;84.682640;86.222881;94.060283;105.944771;116.041773;123.470665;128.462280;131.309660;132.568157;132.068914;129.126443;123.398930;115.839936;108.050819;100.981146;95.778956;91.996713;89.868375;88.330687;87.089868;86.373341;85.809696;85.466577;85.135852;84.559183;85.491904;91.789673;103.482765;114.260166;122.119167;127.359866;130.549188;132.361120;131.869085;129.410096;124.100404;117.141003;109.391460;102.606329;96.716912;92.445264;90.394305;88.719132;87.950356;86.931819;85.900404;85.436811;85.134344;84.787281;84.516599;87.453950;97.171868;109.205193;118.603606;125.068605;129.111647;131.588886;132.317485;131.117846;126.984556;120.894017;112.976779;105.567131;99.277502;94.411785;91.266391;89.086714;87.842296;86.926434;86.211205;85.923357;85.457183;84.857518;84.583244;84.566504;88.442341;99.225759;110.983407;119.552009;125.608295;129.497410;131.841746;132.395808;130.699946;126.216950;119.884642;112.188897;104.758365;98.365777;93.729428;90.794374;88.975397;87.837648;87.021131;86.289478;85.520238;85.031866;84.845000;84.566177;84.568705;87.981851;98.352803;110.055836;119.014971;125.001188;129.156819;131.543048;132.165173;130.439660;126.401533;119.826641;112.264708;105.036151;98.581782;94.014624;91.038464;88.900130;87.606450;86.609344;85.878615;85.467694;84.778335;84.550026;84.223791;84.393972;88.437572;99.512221;111.421808;119.970407;125.595944;129.439394;131.579100;132.179362;130.282644;125.740733;119.079217;111.558963;104.195399;98.292194;93.572201;90.455359;88.672924;87.465862;86.507297;85.902183;85.559830;85.167726;84.956443;84.896648;85.062393;90.518393;101.829356;113.380492;121.112923;126.360293;129.970358;131.711471;131.765261;129.694688;124.490782;117.193274;109.346705;102.593983;96.829343;92.814492;90.317926;88.741564;87.556304;86.812122;86.050413;85.442899;85.231835;84.814221;84.572047;86.413103;94.726017;106.700899;117.010237;123.597296;128.015713;130.907837;132.072151;131.185742;127.693996;121.919137;114.356476;106.769423;99.999163;95.044773;91.572082;89.208045;87.980568;86.893468;86.399219;85.933384;85.745586;85.064306;84.571872;85.890799;93.644976;105.479468;115.817630;122.786951;127.703004;130.505735;131.693305;131.118398;127.998866;122.289238;115.074550;107.501721;100.716231;95.155114;91.601434;89.527228;88.129306;87.249461;86.470281;85.877834;85.556327;85.123331;84.542702;85.640437;93.520862;105.597419;115.589545;123.012136;127.659154;130.565933;131.711975;131.098397;128.105766;122.472709;115.397657;107.644003;100.771029;95.443285;91.901109;89.464006;88.147260;87.217943;86.614236;85.907239;85.089917;}";

%B6r5c5
%trace_string = "{91.169154;91.329386;91.417397;91.335362;91.210052;91.679309;91.881716;92.108817;92.229882;92.211287;92.301625;92.434668;92.368117;92.199588;92.234902;91.913118;91.677761;91.563621;91.239288;90.875657;90.635486;90.522947;90.047795;90.053097;89.834275;89.724981;89.347504;89.201974;89.158495;88.923567;88.924894;88.694543;88.760392;88.770570;88.793985;88.383160;88.338097;88.517056;88.380115;88.390925;88.217672;88.203465;88.320449;88.426620;88.317499;88.439135;88.443005;88.425271;88.288584;88.373493;88.385686;88.590592;89.201665;90.067547;90.848207;91.467783;92.317150;92.844352;93.326168;93.480248;93.640623;93.712169;93.614858;93.504385;93.314043;92.991102;92.690410;92.251995;91.846598;91.420822;91.253413;90.884215;90.428366;90.168001;89.852235;89.662338;89.382261;89.256992;89.334478;88.912671;88.789989;88.824595;88.694993;88.570837;88.465382;88.527872;88.521847;88.338229;88.188441;88.294827;88.157005;88.098125;87.966621;87.913768;87.956717;88.196733;87.942189;88.033661;87.934802;88.221940;88.829071;89.784465;90.948556;91.540481;92.264042;92.787021;93.347137;93.542273;93.602260;93.463579;93.573075;93.653633;93.269209;92.866601;92.543917;92.277719;91.746316;91.392779;90.962175;90.791732;90.262707;89.862129;89.881466;89.470749;89.202242;88.812156;88.522753;88.255187;88.340906;88.298894;87.996011;88.041667;87.832953;87.751355;88.031651;87.944974;88.010071;87.959529;87.978882;88.086274;88.351814;88.454260;88.726001;89.071226;89.674351;90.550549;91.441228;92.457861;92.718903;93.147300;93.512736;93.871628;93.560898;93.380067;93.491496;93.110787;92.814343;92.437388;92.174468;91.521455;91.262435;90.835329;90.498939;90.090548;89.722908;89.254751;89.253460;88.866997;88.613667;88.560269;88.578031;88.518767;88.781554;89.328263;89.574303;89.819654;89.975135;90.225881;90.386074;90.682321;90.782344;90.796196;90.774751;90.942077;90.796059;90.695425;90.817811;90.961531;91.112522;91.192239;91.230781;91.359724;91.582075;91.732216;91.386553;91.400711;91.465525;91.176576;90.862483;90.633076;90.620539;90.266718;90.114724;89.881743;89.681612;89.334754;89.388415;89.116599;88.936834;88.663831;88.478144;88.349663;88.419834;88.386213;88.354819;88.319777;88.166515;88.293153;87.941015;88.152421;88.149173;88.113092;88.321727;88.120160;87.965212;87.683236;87.624096;87.796303;87.917639;88.192188;88.788974;89.358324;89.966504;90.852604;91.561132;91.886173;92.303996;92.784817;92.943607;93.128849;93.279349;93.004990;92.841974;92.597743;92.410305;91.973674;91.617058;91.480345;90.831070;90.369037;90.204462;89.947485;89.580682;89.173677;89.227231;88.926671;88.620324;88.444156;88.306688;88.224547;88.243101;88.203149;88.006994;87.836084;87.789697;87.634920;87.762463;87.790035;87.861209;87.758476;87.833070;88.199400;88.650921;89.141852;90.372223;91.344877;91.891667;92.307691;92.562354;93.069470;93.111368;93.090886;93.036173;93.241186;92.947570;92.539856;92.057875;91.653357;91.247887;90.875671;90.630913;90.343681;89.927460;89.625462;89.305841;88.960858;88.499305;88.590223;88.387853;88.589313;88.522344;88.377757;87.944165;87.973496;87.744173;87.893920;88.215354;88.286737;88.216445;88.100370;88.026621;88.156541;88.207870;88.249372;88.309365;88.383894;88.393010;88.376113;88.556975;88.958318;89.786270;90.516624;91.386944;91.927780;92.183218;92.513254;92.673650;92.959574;92.922028;92.756488;}";

%B7r5c5
%trace_string = "{203.453031;201.214780;199.365932;198.022663;197.680792;196.752984;195.598844;195.041723;193.497653;193.037423;193.377527;192.721622;192.295185;192.758704;194.814779;199.834035;204.999519;206.954756;209.903089;211.499703;212.251589;212.332059;212.580368;212.150961;211.913110;211.252769;210.334557;208.899112;206.487535;203.274571;200.524583;198.376745;197.546331;196.882820;195.885361;194.565572;193.019143;192.477554;191.896945;191.590050;191.258810;190.829819;192.323415;197.491141;201.755267;205.577782;208.600836;209.986745;210.368759;211.862070;211.644760;211.535757;212.169402;211.857727;210.676511;209.792636;208.448194;205.633766;203.148663;200.010866;197.754166;195.797390;194.734720;194.762453;193.520683;192.446263;191.744900;191.724549;191.315847;191.192946;191.167641;190.641758;192.626304;197.859535;202.447781;205.532792;207.409645;209.206185;210.442913;211.376937;211.902553;211.232770;211.223805;209.803033;208.906893;206.880537;204.740501;202.392850;200.038663;198.086514;197.033847;196.721912;194.634752;193.259262;192.820338;192.237995;192.076622;191.274011;190.974742;189.997035;189.482960;189.306655;190.859020;195.626714;201.360514;205.020593;207.780805;208.645744;209.228303;210.270666;212.750260;213.088267;212.327451;210.540841;209.120369;207.465495;205.235725;202.409040;201.139430;199.722005;197.957113;196.463707;194.362759;193.272066;192.698147;192.057308;191.579508;191.443484;191.102905;190.566381;190.916138;190.733918;192.395079;196.862728;200.614445;204.193517;206.063351;208.481744;210.006894;210.022115;210.094937;210.278168;210.768489;210.866073;210.549108;208.407695;206.837201;203.785518;201.816281;199.478404;197.172729;196.120581;195.124177;195.289621;194.889082;192.972223;192.004355;192.020864;192.310113;192.407292;191.901549;195.295401;199.084640;202.269476;205.929006;208.550866;209.927767;211.214769;211.374972;211.615591;211.576575;210.193487;209.388791;210.111360;207.552602;205.067778;202.294377;200.680010;199.476524;196.972568;195.300855;195.020059;194.392974;192.784029;192.610040;192.123021;193.667572;193.165800;194.191529;197.785565;202.693201;205.704986;207.745594;210.038043;211.292662;211.889447;212.090396;212.061107;211.969367;210.353273;207.986026;207.562766;206.053303;204.060273;200.770813;198.903363;197.709263;195.908892;194.822694;193.656593;192.884312;191.379935;190.896057;191.320710;193.221205;197.580770;201.649843;205.826784;209.216908;209.845263;210.629343;211.194045;211.578794;212.431846;211.947872;210.910670;209.032316;207.066280;204.068479;202.314870;200.895982;198.089561;196.241418;195.140218;194.229438;193.856781;192.819750;191.843859;191.323726;191.057204;191.626003;192.435465;195.528891;199.870780;203.606436;205.498132;209.023683;210.428029;211.581612;211.382351;211.113107;211.211428;211.698768;210.342559;208.658513;206.801715;203.964677;201.959824;200.724154;199.290748;197.227749;195.850605;194.499221;193.656214;192.681544;191.887819;190.922811;191.509967;191.956298;192.322184;194.160706;197.720467;202.485852;205.831303;208.562778;210.153753;210.875070;211.381586;211.724543;211.789784;211.804407;210.162666;206.899380;205.630868;203.909451;202.076447;200.515284;198.605340;197.167235;195.736587;194.098722;193.486659;191.880404;191.862403;191.199015;192.002996;192.321751;190.686466;190.646223;192.346474;195.716950;199.199420;202.941916;205.748961;207.444064;208.596332;209.569760;211.279911;211.278895;209.885061;209.627518;209.059276;207.512135;205.289634;202.810985;199.549423;198.213936;196.899443;195.943276;194.533849;193.179890;192.290228;191.532119;191.336895;191.913866;190.968670;189.925525;189.798203;190.900641;193.167807;}";

%B9r4c4
%trace_string = "{103.472110;103.412154;103.528966;103.293612;104.045254;105.061882;105.791520;106.118036;106.417730;106.931336;106.884744;107.058454;106.968704;107.187794;107.132145;107.005842;106.705524;106.347449;106.092265;105.886875;105.295989;104.931330;104.766816;104.696220;104.581399;104.311550;104.110570;103.878379;103.794904;103.875038;103.543340;103.568590;103.517698;103.456343;103.445318;103.459044;103.648324;104.027905;104.386808;104.760934;104.777268;104.602478;104.606792;104.684380;104.729898;104.773957;104.927722;104.886193;105.112981;104.578742;104.338261;104.460636;104.071731;104.097929;104.215024;104.270478;103.993087;103.745013;103.429152;103.279242;103.465744;103.514510;103.613193;103.700383;103.489807;103.684902;103.412917;103.610816;103.488805;103.306893;103.536035;103.595109;103.779181;104.191411;104.528306;104.550196;104.882208;104.914239;105.109570;104.911242;105.122889;104.859363;104.879128;104.762628;104.500506;104.402975;104.622093;104.660005;104.629936;104.335199;104.058226;104.158388;104.170515;104.555358;104.594287;104.887171;105.005809;105.082997;104.932626;105.034773;104.843131;104.799525;104.718542;104.644208;104.607261;104.703962;104.453895;103.940464;103.636771;103.388183;103.385524;103.212148;102.696376;102.854841;102.933213;102.547799;102.492706;102.339867;102.382330;102.527439;102.669632;102.637034;103.224130;103.493122;104.054925;104.350883;104.746797;105.096365;105.252232;105.375284;105.542132;105.650636;105.390561;105.237162;104.858442;104.550634;104.384597;104.432678;103.989087;104.141421;104.127328;104.120474;104.134471;104.086987;103.973850;103.680850;103.625783;103.465097;103.409984;103.248138;103.160194;103.107961;103.068784;102.919771;103.254536;103.402794;102.882717;102.813388;103.319759;103.685985;103.959488;103.948773;104.258253;104.432436;104.732303;105.087041;105.418097;105.460308;105.324110;105.356313;105.746070;105.529711;105.100821;104.837107;104.511225;104.596581;104.320421;104.208525;104.080676;103.917248;103.665685;103.798791;103.698753;103.439141;103.343860;103.437175;103.382884;103.400936;103.451278;103.417245;103.538279;103.572426;103.828904;104.093982;104.194940;104.034456;104.125905;104.126607;103.991317;103.825521;103.738780;103.672303;103.420387;103.424552;103.401825;103.260096;102.895592;102.847188;102.774237;102.912901;102.846772;103.309038;103.326560;104.003938;104.247402;104.563574;104.974616;104.887450;105.267893;105.139315;105.095874;104.579593;104.568564;104.440318;104.370696;104.164709;104.005458;103.835402;103.778897;103.351341;103.486979;103.339600;103.108572;103.103451;103.023868;102.867879;102.666163;102.709073;102.694066;102.678886;102.534268;102.710235;102.353800;102.395463;102.342278;102.696357;102.539107;102.967322;102.951215;103.115481;103.341030;103.565386;103.831804;104.011670;104.142177;104.498129;104.606518;104.796919;105.489014;105.410251;105.491214;105.625688;105.663351;105.583668;105.217032;104.730407;104.309278;104.389167;104.191679;104.142880;104.046996;103.837217;103.467447;103.226810;102.784158;102.747436;102.568391;102.147204;102.502787;102.659369;102.690631;102.479414;102.489127;102.623192;102.706606;103.021524;103.150009;103.101125;103.184682;103.438434;103.542691;103.670185;103.693684;103.623079;103.564337;103.649203;103.691936;103.509390;103.615464;103.315179;103.000439;102.771088;103.097951;103.093547;102.876282;102.843084;102.834581;102.910302;102.894227;102.822779;102.739942;102.502751;102.704533;102.968007;103.005791;103.163653;103.684494;104.013594;104.177903;104.357303;104.186487;104.136931;104.180361;104.426555;104.128490;104.058770;104.042750;103.652320;103.504116;103.126073;}";

trace_string = extractBetween(trace_string,2,strlength(trace_string)-2); %get rid of leading { and lagging ;}

signal = str2double(split(trace_string,';'));
frame_duration = 1/33; % in seconds, 33 FPS
times = (1:length(signal)) * frame_duration;

[peakIDs,x,y] = split_peaks(times,signal);

group = peakIDs;

figure;
plot_multicolor_rik(x,y,group,'LineWidth',1.5)

%TODO



% group_keys = unique(group);
% nGroups = length(group_keys);
% hold on
% for iGroup = 2:nGroups
%     group_elements = find(group==group_keys(iGroup));
%     if group_keys(iGroup)~=0
%         group_elements(end) = group_elements(end)+0; % This adds overlap between a group and the next one
%     end
%     colorgroup = lines(nGroups);
%     p = plot(x(group_elements),y(group_elements),'LineWidth',1.5);
%     p.Color = colorgroup(iGroup,:);
% end
% hold off

%%%%
%legacy work
%%%%
% 

% 
% min_peak_time = 0.3; %200 bpm = 60/200 = 0.3 - maximum possible rate allowed
% min_peak_frames = ceil(min_peak_time/frame_duration);
% 
% max_signal = max(signal);
% min_signal = min(signal);
% max_amplitude = max_signal-min_signal;
% 
% signal_threshold = max_amplitude * 0.5+min_signal;
% 
% prominence_threshold = max_amplitude * 0.5;
% 

% 
% [pks,maxlocs,w,p] = findpeaks(signal,"MinPeakDistance",min_peak_frames,"MinPeakProminence",prominence_threshold);
% 
% figure;
% findpeaks(signal,"MinPeakDistance",min_peak_frames,'Annotate','extents');
% 
% minlocs = NaN([length(maxlocs)-1 1]);
% 
% for i = 1:length(maxlocs)-1
%     [m,mloc] = min(signal(maxlocs(i):maxlocs(i+1)));
%     minlocs(i) = maxlocs(i)-1+mloc; %-1 because index starts at 1, so if the minimum were at the left end, want minlocs(i) = maxlocs(i)
% end
% 
% %left side of plot
% [m,leftmin] = min(signal(1:maxlocs(1)));
% 
% if leftmin == 1
%     maxlocs = maxlocs(2:length(maxlocs)); % get rid of incomplete peak on left
% else
%     minlocs = [leftmin;minlocs]; % add minimum on left
% end
% 
% %right side of plot
% [m,rightmin] = min(signal(maxlocs(length(maxlocs)):length(signal)));
% rightmin = rightmin + maxlocs(length(maxlocs))-1;
% 
% if rightmin == length(signal)
%     maxlocs = maxlocs(1:length(maxlocs)-1); %get rid of incomplete peak on right
% else
%     minlocs = [minlocs;rightmin]; %add minimum on right
% end
% 
% peak_to_peak = [diff(maxlocs);NaN]; %last one will always have no length
% 
% peak_IDs = cumsum(ismember(1:length(signal),minlocs));
% peak_IDs(peak_IDs==max(peak_IDs)) = 0;
% 
% 
% asdf = abs(fft(signal));
% [dummy,est_num_peaks] = max(asdf(2:length(asdf)/2));
% 
% figure;
% plot(asdf(2:length(asdf)/2));
% 
% est_num_peaks
% 
% figure;
% findpeaks(signal,"MinPeakDistance",ceil(0.5*length(signal)/est_num_peaks),'Annotate','extents');
% 
% cross_corr = xcorr(signal-mean(signal),'biased')
% 
% cross_corr = cross_corr(length(signal):length(cross_corr));
% 
% figure;
% findpeaks(cross_corr);
% 
% [dummy,xcor_loc] = findpeaks(cross_corr);